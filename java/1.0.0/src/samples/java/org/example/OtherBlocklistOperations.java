// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package org.example;


import com.azure.ai.contentsafety.BlocklistClient;
import com.azure.ai.contentsafety.BlocklistClientBuilder;
import com.azure.ai.contentsafety.models.AddOrUpdateTextBlocklistItemsOptions;
import com.azure.ai.contentsafety.models.AddOrUpdateTextBlocklistItemsResult;
import com.azure.ai.contentsafety.models.RemoveTextBlocklistItemsOptions;
import com.azure.ai.contentsafety.models.TextBlocklist;
import com.azure.ai.contentsafety.models.TextBlocklistItem;
import com.azure.core.credential.KeyCredential;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Configuration;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class OtherBlocklistOperations {
    public static void main(String[] args) {
        ListAllBlocklistItems();
        ListTextBlocklists();
        GetTextBlocklist();
        GetBlocklistItem();
        RemoveBlocklistItem();
        DeleteBlocklist();
    }

    public static void ListAllBlocklistItems() {
        // Sample: List all blocklistItems in a list
        String endpoint = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_ENDPOINT");
        String key = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_KEY");
        BlocklistClient blocklistClient = new BlocklistClientBuilder()
                .credential(new KeyCredential(key))
                .endpoint(endpoint).buildClient();

        String blocklistName = "TestBlocklist";
        PagedIterable<TextBlocklistItem> allBlockitems = blocklistClient.listTextBlocklistItems(blocklistName);
        System.out.println("\nList BlockItems:");
        for (TextBlocklistItem blocklistItem : allBlockitems) {
            System.out.println("BlockItemId: " + blocklistItem.getBlocklistItemId() + ", Text: " + blocklistItem.getText() + ", Description: " + blocklistItem.getDescription());
        }
    }

    public static void ListTextBlocklists() {
        // Sample: List all blocklists
        String endpoint = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_ENDPOINT");
        String key = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_KEY");
        BlocklistClient blocklistClient = new BlocklistClientBuilder()
                .credential(new KeyCredential(key))
                .endpoint(endpoint).buildClient();

        PagedIterable<TextBlocklist> allTextBlocklists = blocklistClient.listTextBlocklists();
        System.out.println("\nList Blocklist:");
        for (TextBlocklist blocklist : allTextBlocklists) {
            System.out.println("Blocklist: " + blocklist.getName() + ", Description: " + blocklist.getDescription());
        }
    }

    public static void GetTextBlocklist() {
        // Sample: Get a blocklist by blocklistName
        String endpoint = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_ENDPOINT");
        String key = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_KEY");
        BlocklistClient blocklistClient = new BlocklistClientBuilder()
                .credential(new KeyCredential(key))
                .endpoint(endpoint).buildClient();

        String blocklistName = "TestBlocklist";
        TextBlocklist getBlocklist = blocklistClient.getTextBlocklist(blocklistName);
        if (getBlocklist != null) {
            System.out.println("\nGet blocklist:");
            System.out.println("BlocklistName: " + getBlocklist.getName() + ", Description: " + getBlocklist.getDescription());
        }
    }

    public static void GetBlocklistItem() {
        // Sample: Get a blocklistItem by blocklistName and blocklistItemId
        String endpoint = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_ENDPOINT");
        String key = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_KEY");
        BlocklistClient blocklistClient = new BlocklistClientBuilder()
                .credential(new KeyCredential(key))
                .endpoint(endpoint).buildClient();

        // Add a blocklistItem and get its id
        String blocklistName = "TestBlocklist";
        String blocklistItemText = "blocklistItemText";
        List<TextBlocklistItem> blockItems = Arrays.asList(new TextBlocklistItem(blocklistItemText).setDescription("Test blocklist item 1"));
        AddOrUpdateTextBlocklistItemsResult addedBlockItems = blocklistClient.addOrUpdateBlocklistItems(blocklistName,
                new AddOrUpdateTextBlocklistItemsOptions(blockItems));
        if (addedBlockItems != null && addedBlockItems.getBlocklistItems() != null) {
            System.out.println("\nBlockItems added:");
            for (TextBlocklistItem addedBlockItem : addedBlockItems.getBlocklistItems()) {
                System.out.println("BlockItemId: " + addedBlockItem.getBlocklistItemId() + ", Text: " + addedBlockItem.getText() + ", Description: " + addedBlockItem.getDescription());
            }
        }
        String getBlockItemId = addedBlockItems.getBlocklistItems().get(0).getBlocklistItemId();

        // Get this blocklistItem by blocklistItemId
        TextBlocklistItem getBlockItem = blocklistClient.getTextBlocklistItem(blocklistName, getBlockItemId);
        System.out.println("\nGet BlockItem:");
        System.out.println("BlockItemId: " + getBlockItem.getBlocklistItemId() + ", Text: " + getBlockItem.getText() + ", Description: " + getBlockItem.getDescription());
    }

    public static void RemoveBlocklistItem() {
        // Sample: Remove blocklistItems from a blocklist
        String endpoint = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_ENDPOINT");
        String key = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_KEY");
        BlocklistClient blocklistClient = new BlocklistClientBuilder()
                .credential(new KeyCredential(key))
                .endpoint(endpoint).buildClient();

        // Add a blocklistItem and get its id
        String blocklistName = "TestBlocklist";
        String blocklistItemText = "blocklistItemText";
        List<TextBlocklistItem> blockItems = Arrays.asList(new TextBlocklistItem(blocklistItemText).setDescription("Test blocklist item 1"));
        AddOrUpdateTextBlocklistItemsResult addedBlockItems = blocklistClient.addOrUpdateBlocklistItems(blocklistName,
                new AddOrUpdateTextBlocklistItemsOptions(blockItems));
        if (addedBlockItems != null && addedBlockItems.getBlocklistItems() != null) {
            System.out.println("\nBlockItems added:");
            for (TextBlocklistItem addedBlockItem : addedBlockItems.getBlocklistItems()) {
                System.out.println("BlockItemId: " + addedBlockItem.getBlocklistItemId() + ", Text: " + addedBlockItem.getText() + ", Description: " + addedBlockItem.getDescription());
            }
        }
        String removeBlockItemId = addedBlockItems.getBlocklistItems().get(0).getBlocklistItemId();

        // Remove this blocklistItem by blocklistItemId
        List<String> removeBlockItemIds = new ArrayList<>();
        removeBlockItemIds.add(removeBlockItemId);
        blocklistClient.removeBlocklistItems(blocklistName, new RemoveTextBlocklistItemsOptions(removeBlockItemIds));
        System.out.println("BlocklistItem has been removed.");
    }

    public static void DeleteBlocklist() {
        // Sample: Delete a list and all of its contents
        String endpoint = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_ENDPOINT");
        String key = Configuration.getGlobalConfiguration().get("CONTENT_SAFETY_KEY");
        BlocklistClient blocklistClient = new BlocklistClientBuilder()
                .credential(new KeyCredential(key))
                .endpoint(endpoint).buildClient();

        String blocklistName = "TestBlocklist";
        blocklistClient.deleteTextBlocklist(blocklistName);
        System.out.println("Blocklist has been removed.");
    }
}